apiVersion: apps/v1
kind: Deployment
metadata:
  name: sales-deployment
  namespace: sales-system
spec:
  selector:
    matchLabels:
      app: sales
  template:
    metadata:
      labels:
        app: sales
    spec:
      volumes:
        - name: keys-volume
          emptyDir: {}
      initContainers:
        - name: generate-keys
          image: sales:0.0.1
          command: ["./admin", "genkey"]
          args: ["-size=2048"]
          volumeMounts:
            - name: keys-volume
              mountPath: /services/keys
      containers:
        - name: sales
          image: sales:0.0.1
          volumeMounts:
            - name: keys-volume
              mountPath: /services/keys

          resources:
            requests:
              memory: "100Mi"
              cpu: "500m" # 50ms from 100ms given by scheduler, single threaded Go application
            limits:
              memory: "100Mi"
              cpu: "500m"

          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: GOGC
              value: "off"
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: SALES_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: db_user
                  optional: true
            - name: SALES_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: db_password
                  optional: true
            - name: SALES_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: db_host
                  optional: true
            - name: SALES_DB_DISABLE_TLS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: db_disabletls
                  optional: true

            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          ports:
            - containerPort: 8000
              name: sales-port
          readinessProbe:
            httpGet:
              path: /v1/readiness
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2

          livenessProbe: # liveness probes mark the service alive or dead (to be restarted).
            httpGet:
              path: /v1/liveness
              port: 8000
            initialDelaySeconds: 2
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2

---
apiVersion: v1
kind: Service
metadata:
  name: sales-svc
  namespace: sales-system
spec:
  selector:
    app: sales
  ports:
    - port: 8000
      targetPort: 8000
      name: sales-port
